@page
@using Microsoft.AspNetCore.Http.Extensions
@using GestionFacturas.Dominio
@model ListaGestionFacturasModel
@{
    ViewData["Title"] = "Facturas";
}

<div class="row">
    <nav id="sidebarMenu" class="col-sm-12 col-md-3 col-lg-2 d-md-block bg-light border-end">
        <div class="position-sticky pt-3">

            <div id="toolbar1" class="toolbar">
                <div class="row g-3">

                    <div class="col-12">
                        <label asp-for="NombreOEmpresa">Descripción/Cliente</label>
                        <input type="text" asp-for="NombreOEmpresa" class="form-control" placeholder="Nombre cliente...">
                    </div>

                   <div class="col-12">
                        <label asp-for="Desde">Desde</label>
                        <input asp-for="Desde" type="date" class="form-control" poster="Desde" placeholder="Desde">

                    </div>
                    <div class="col-12">
                        <label asp-for="Hasta">Hasta</label>
                        <input asp-for="Hasta" type="date" class="form-control" poster="Hasta" placeholder="Hasta">

                    </div>

                    <div class="col-12">
                        <label asp-for="Orden">Ordenar por</label>
                        <select asp-for="Orden" class="form-select" asp-items="Html.GetEnumSelectList<OrdenFacturasEnum>()">
                            
                        </select>
                    </div>
                    

                </div>
            </div>
        </div>
    </nav>

    <div class="col-sm-12 col-md-9 col-lg-10">

        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
            <h2 class="h2">
                <svg class="bi" width="24" height="24">
                    <use xlink:href="#bi-list-task"></use>
                </svg>
                @ViewData["Title"]
            </h2>
            <div class="btn-toolbar mb-2 mb-md-0">

                <a class="btn btn-outline-primary"
                   asp-page="@CrearFacturaModel.NombrePagina">
                    <i class="bi bi-plus"></i>
                    Nueva factura
                </a>

            </div>
        </div>


        <div class="table-responsive">
            <table id="tablaAcciones"
                   class="table table-striped table-sm">
                <thead>
                    <tr>
                        <th scope="col" data-field="@nameof(LineaListaGestionFacturas.Id)" data-visible="false" data-serchable="false">ID</th>
                        <th scope="col" data-field="@nameof(LineaListaGestionFacturas.NumeroFactura)" data-width="50">Factura</th>
                        <th scope="col" data-field="@nameof(LineaListaGestionFacturas.FechaEmisionFactura)" data-width="50">Fecha</th>
                        <th scope="col" data-field="@nameof(LineaListaGestionFacturas.CompradorNombreOEmpresa)" data-width="40" data-width-unit="%">Descripción</th>
                        <th scope="col" data-field="@nameof(LineaListaGestionFacturas.EstadoFactura)" data-footer-formatter="etiquetaTotalFormatter" data-formatter="estadoFormatter" data-width="50">Estado</th>
                        <th scope="col" data-field="@nameof(LineaListaGestionFacturas.BaseImponible)" data-footer-formatter="totalFormatter" data-formatter="priceFormatter" data-width="50">BI</th>
                        <th scope="col" data-field="@nameof(LineaListaGestionFacturas.Impuestos)" data-footer-formatter="totalFormatter" data-formatter="priceFormatter" data-width="50">IVA</th>
                        <th scope="col" data-field="@nameof(LineaListaGestionFacturas.ImporteTotal)" data-footer-formatter="totalFormatter" data-formatter="priceFormatter" data-width="50">Total</th>
                        <th data-field="acciones" data-formatter="accionesFormatter" data-width="100" data-sortable="false">Acciones</th>

                    </tr>
                </thead>

            </table>
        </div>
    </div>
</div>

@section scripts
{
    <partial name="_BootstrapTableScripts"/>


    <script>
        const returnUrl = "ReturnUrl=@HttpContext.Request.GetEncodedPathAndQuery()";
              
        function refrescar() {
            guardarEstadoFiltros('#toolbar1');
            $("#tablaAcciones").bootstrapTable('refresh');
        }

        function initTable() {

            $("#@Html.IdFor(m => m.NombreOEmpresa)").change(refrescar);
            $("#@Html.IdFor(m => m.Desde)").change(refrescar);
            $("#@Html.IdFor(m => m.Hasta)").change(refrescar);
            $("#@Html.IdFor(m => m.Orden)").change(refrescar);
                      

            $("#tablaAcciones").bootstrapTable({
                //toolbar:"#toolbar1",
                //search: false,
                url: "@Url.Action("Buscar", "GridFacturas")",
                showFooter: true,
            });
        }

    </script>

    <script>

        $(document).ready(function () {
                                 
            initTable();
        });

        function accionesFormatter(value, row, index) {

            return [
                '<div class="dropdown text-center">',
                '<button class="btn btn-outline-primary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">',
                'Acciones',
                '</button>',
                '<ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">',
                '<li><a class="dropdown-item" href="/AnadirAccionARaport/Index/' + row.Id + '?' + returnUrl + '">Editar</a></li>',
             @*   //'<li><a class="dropdown-item" href="@ModificarAccionModel.NombrePagina/' + row.Id + '?' + returnUrl + '">Enviar</a></li>',
                //'<li><a class="dropdown-item" href="@ComentarAccionModel.NombrePagina/' + row.Id + '?' + returnUrl + '">Descargar</a></li>',
                //'<li><a class="dropdown-item" href="@MarcarComentariosAccionComoLeidosModel.NombrePagina/' + row.Id + '?' + returnUrl + '">Duplicar</a></li>',
                //'<li><a class="dropdown-item" href="@ComentarAccionModel.NombrePagina/' + row.Id + '?' + returnUrl + '">Imprimir</a></li>',
                //'<li><a class="dropdown-item" href="@EliminarAccionModel.NombrePagina/' + row.Id + '?' + returnUrl + '"><i class="bi bi-trash text-danger"></i> Eliminar</a></li>',
               *@ '</ul>',
                '</div>'
            ].join('');
        }

        function totalFormatter(data) {
            var field = this.field
            return data.map(function (row) {
                return +row[field]
                }).reduce(function (sum, i) {
                    return sum + i
            }, 0).toLocaleString('es-ES', {
                style: 'currency',
                currency: 'EUR',
            })
        }

        function etiquetaTotalFormatter() {
            return 'Total'
        }

        function priceFormatter(value) {
            return value.toLocaleString('es-ES', {
                style: 'currency',
                currency: 'EUR',
            })
        }

        function obtenerCssClasePorEstadoFactura(estadoFactura) {
            if (estadoFactura === 1) {
                return "default";
            } else if (estadoFactura === 2) {
                return "warning";
            } else if (estadoFactura === 3) {
                return "success";
            }
            return "";
        }

        function obtenerTextoEstadoFactura(estadoFactura) {
            if (estadoFactura === 1) {
                return '@EstadoFacturaEnum.Borrador';
            } else if (estadoFactura === 2) {
                return "@EstadoFacturaEnum.Enviada";
            } else if (estadoFactura === 3) {
                return "@EstadoFacturaEnum.Cobrada";
            }
            return "";
        }

        function etiquetaTotalFormatter() {
            return 'Total'
        }

        function estadoFormatter(value, row, index) {
            var cssEstado = obtenerCssClasePorEstadoFactura(value);
            var texto = obtenerTextoEstadoFactura(value);
            return '<span class="badge bg-' + cssEstado + '">'+texto+'</span>'
             }
    </script>


}

