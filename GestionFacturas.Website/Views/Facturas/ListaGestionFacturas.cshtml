@using GestionFacturas.Modelos
@using GestionFacturas.Servicios
@using PagedList.Mvc
@using GestionFacturas.Website.Helpers
@model GestionFacturas.Website.Viewmodels.Facturas.ListaGestionFacturasViewModel
    

@{
    ViewBag.Title = "Lista de facturas";
}

@section styles{
    @Styles.Render("~/Content/themes/base/css")
}




@section ScriptsTop {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
}

@section Scripts{    
    <script type="text/javascript">
        function DescargarZip() {
            window.location = '@Url.Action("DescargarZip")?' + ParametrosBusquedaFormulario();
        }

        function DescargarExcel() {
            window.location = '@Url.Action("DescargarExcel")?' + ParametrosBusquedaFormulario();
        }

        function ParametrosBusquedaFormulario() {
            return $('#formularioBusqueda').serialize();
           
        }  

    </script>
}


<script type="text/javascript">


    function obtenerCssClasePorEstadoFactura(estadoFactura) {
        if (estadoFactura === 1) {
            return "default";
        } else if (estadoFactura === 2) {
            return "warning";
        } else if (estadoFactura === 3) {
            return "success";
        }
        return "";
    }

    function crearBotonEstadoFactura(idFactura, numeroFactura, estadoFactura, textoBotton) {

        var element = document.createElement("button");
        element.type = "button";

        var t = document.createTextNode(textoBotton);
        element.appendChild(t);

        element.className = "btn btn-" + obtenerCssClasePorEstadoFactura(estadoFactura) + " btn-xs";

        element.setAttribute("data-idfactura", idFactura);
        element.setAttribute("data-numerofactura", numeroFactura);
        element.setAttribute("data-estadofactura", estadoFactura);
        element.setAttribute("data-toggle", "modal");
        element.setAttribute("data-target", "#modalCambiarEstadoFactura");

        var contenedor = document.getElementById("contenedorBotonEstadoFactura" + idFactura);
        contenedor.appendChild(element);
    }

    function eliminarBotonEstadoFactura(idFactura) {
        $("#contenedorBotonEstadoFactura" + idFactura).empty();
    }

</script>


<h2>Facturas</h2>

<div class="panel panel-default">
    <div class="panel-heading">
        @Html.ActionLink("Crear nueva factura", "Crear", null, new { @class = "btn btn-primary" })
        @Html.ActionLink("Descargar Zip", "DescargarZip", null, new { @class = "btn btn-default", onclick = "DescargarZip();return false;" })
        @Html.ActionLink("Descargar Excel", "DescargarExcel", null, new { @class = "btn btn-default", onclick = "DescargarExcel();return false;" })
        @Html.ActionLink("Importar facturas", "Importar", null, new { @class = "btn btn-default" })
    </div>

    <div class="panel-body">
        @using (Html.BeginForm(null, null, FormMethod.Get, new { @class = "form-inline", Id = "formularioBusqueda" }))
       {
        @Html.EditorFor(m => m.FiltroBusqueda, "FiltroBusquedaFactura")
       }
    </div>
</div>
<table class="table table-striped">
    <tr>
        <th>
            Factura
        </th>
        <th>
            Fecha
        </th>
        <th>
            Cliente
        </th>
        <th>
            Conceptos
        </th>
        <th>
            Estado
        </th>
        <th>
            BI
        </th>
        <th>
            IVA
        </th>
        <th>
            Total
        </th>


        <th></th>
    </tr>

    @foreach (var item in Model.ListaFacturas)
    {
        <tr>
            <td class="text-nowrap">
                @Html.ActionLink(item.NumeroFactura, "Detalles", new {id = item.Id})
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaEmisionFactura, "FechaCorta")
            </td>
            <td>
                @if (item.IdComprador.HasValue)
                {
                    @Html.ActionLink(item.CompradorNombre, "Editar", "Clientes", new {id = item.IdComprador.Value}, null)
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.CompradorNombre)
                }

            </td>
            <td class="col-md-4 col-sm-4 col-lg-4">
                <span title="@item.Conceptos">@item.Conceptos.TruncarConElipsis(50)</span>
            </td>
            <td id="contenedorBotonEstadoFactura@(item.Id)">
                <script type="text/javascript">
                    crearBotonEstadoFactura(@item.Id,@item.NumeroFactura, @((int) item.EstadoFactura), '@(Html.DisplayFor(modelItem => item.EstadoFactura))');
                </script>
                
                @*<button type="button" class="btn btn-@ObtenerCssClasePorEstadoFactura(item.EstadoFactura) btn-xs"
                        data-idfactura="@item.Id"
                        data-numerofactura="@item.NumeroFactura"
                        data-estadofactura="@((int) item.EstadoFactura)"
                        data-toggle="modal" data-target="#modalCambiarEstadoFactura">
                    @Html.DisplayFor(modelItem => item.EstadoFactura)
                </button>*@
            </td>
            <td class="text-nowrap">
                @Html.DisplayFor(modelItem => item.BaseImponible, "Moneda")
            </td>
            <td class="text-nowrap">
                @Html.DisplayFor(modelItem => item.Impuestos, "Moneda")
            </td>
            <td class="text-nowrap">
                @Html.DisplayFor(modelItem => item.ImporteTotal, "Moneda")
            </td>

            <td style="min-width: 95px">
                <div class="btn-group">
                    @Html.ActionLink("Editar", "Editar", new {id = item.Id}, new {@class = "btn btn-primary btn-sm"})
                    <button type="button" class="btn btn-primary btn-sm dropdown-toggle" style="float: none; display: inline-block" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="caret"></span>
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <ul class="dropdown-menu">
                        <li>
                            @Html.ActionLink("Enviar", "EnviarPorEmail", new {id = item.Id})
                        </li>
                        <li>
                            @Html.ActionLink("Descargar", "Descargar", new { id = item.Id, titulo = "Factura " + item.NumeroFactura })
                        </li>
                        <li>
                            @Html.ActionLink("Duplicar", "Duplicar", new { id = item.Id })
                        </li>
                        <li>
                            @Html.ActionLink("Imprimir", "Imprimir", new {id = item.Id, titulo = "Factura " + item.NumeroFactura}, htmlAttributes: new {target = "_blank"})
                        </li>

                        <li role="separator" class="divider"></li>
                        <li>
                            @Html.ActionLink("Eliminar", "Eliminar", new {id = item.Id})
                        </li>
                    </ul>
                </div>
            </td>
        </tr>
    }
    <tr>
        <th colspan="3">

        </th>
        <th>

        </th>
        <th>
            Totales
        </th>
        <th class="text-nowrap">
            @Html.DisplayFor(m => m.Totales.TotalBaseImponible, "Moneda")
        </th>
        <th class="text-nowrap">
            @Html.DisplayFor(m => m.Totales.TotalImpuestos, "Moneda")

        </th>
        <th class="text-nowrap">
            @Html.DisplayFor(m => m.Totales.TotalImporte, "Moneda")

        </th>


        <th></th>
    </tr>
    <tr>
        <td colspan="9">
            @Html.TotalesListaPaginada(Model.ListaFacturas, " {0} - {1} facturas mostradas de {2}")
            @Html.PagedListPager(Model.ListaFacturas, pagina => Url.Action("ListaGestionFacturas", new {pagina}), new PagedListRenderOptions {Display = PagedListDisplayMode.IfNeeded})
        </td>

    </tr>
</table>

<!-- Modal -->

<script type="text/javascript">
    $(document).ready(function () {
    
        $('#modalCambiarEstadoFactura').on('show.bs.modal', function(event) {

            var button = $(event.relatedTarget); // Button that triggered the modal
            var idFactura = button.data('idfactura'); // Extract info from data-* attributes
            var numeroFactura = button.data('numerofactura');
            var estadoFactura = button.data('estadofactura');
            var modal = $(this);
            modal.find('#recipient-idFactura').val(idFactura);
            modal.find('#recipient-numeroFactura').val(numeroFactura);
            modal.find('#recipient-numeroFacturaDeshabilitado').val(numeroFactura);
            modal.find('#recipient-estadoFactura').val(estadoFactura);
        });

        $("#btnGuardar").click(function (event) {

            $(this).val('Guardando...').prop('disabled', true);

            event.preventDefault();

            guardar();
        });

        function guardar() {
            $.ajax({
                type: "POST",
                url: "@Url.Action("CambiarEstado", "Facturas")",
                data: $("#formCambiarEstado").serialize(),
                dataType: "json"
            }).done(function(data) {

                $("#btnGuardar")
                    .val("Guardar")
                    .prop('disabled', false);

                eliminarBotonEstadoFactura(data.IdFactura);
                crearBotonEstadoFactura(data.IdFactura,data.NumeroFactura, data.EstadoFactura, data.TextoEstadoFactura);

                $('#modalCambiarEstadoFactura').modal('hide');

            }).fail(function() {
                    alert("Se ha producido un error inesperado.");
                    return false;
                }
            );
        }


    });

</script>

<div class="modal" id="modalCambiarEstadoFactura" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Cambiar estado factura</h4>
            </div>
            <div class="modal-body">
                <form id="formCambiarEstado">

                    @Html.HiddenFor(m => m.EditorEstadoFactura.IdFactura, htmlAttributes: new { id = "recipient-idFactura" })
                    @Html.HiddenFor(m => m.EditorEstadoFactura.NumeroFactura, htmlAttributes: new { id = "recipient-numeroFactura" })
                    <div class="form-group">
                        @Html.Label("Factura", htmlAttributes: new {@class = "control-label", @for = "recipient-numeroFactura"})
                        @Html.TextBox("numeroFacturaDeshabilitado", "", htmlAttributes: new {@class = "form-control", id = "recipient-numeroFacturaDeshabilitado", disabled = "disabled"})
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EditorEstadoFactura.EstadoFactura, htmlAttributes: new {@class = "control-label", @for = "recipient-estadoFactura"})
                        @Html.EnumDropDownListFor(model => model.EditorEstadoFactura.EstadoFactura, htmlAttributes: new {@class = "form-control", id = "recipient-estadoFactura"})
                        @Html.ValidationMessageFor(model => model.EditorEstadoFactura.EstadoFactura, "", new {@class = "text-danger"})
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button  type="button" class="btn btn-default" data-dismiss="modal" >Cerrar</button>
                <button type="button" id="btnGuardar" class="btn btn-primary">Guardar</button>

          
            
            </div>
        </div>
    </div>
</div>